head	1.9;
access;
symbols;
locks; strict;
comment	@ * @;


1.9
date	2018.01.20.10.22.55;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2018.01.20.09.55.03;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2018.01.20.09.53.50;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2018.01.20.09.23.45;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2018.01.20.09.16.54;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2018.01.20.09.11.59;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2018.01.20.08.58.28;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2018.01.20.08.56.06;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2018.01.20.07.30.46;	author root;	state Exp;
branches;
next	;


desc
@Declared constants and majorno
@


1.9
log
@some structs for device
@
text
@#ifndef DEVNAME
#define DEVNAME "ProChar-DD"
#endif

#ifndef MAJOR_NO
#define MAJOR_NO 0
#endif

#ifndef MINOR_NO
#define MINOR_NO 0
#endif

typedef struct 
{
	struct Qset *next;
	void **data;
}Qset;

//mydev struct
typedef struct
{
	struct Qset *first;
	struct cdev c_dev;
}Dev;

//pointer to struct 
Dev *dev;

//major number, minor number, number of devices
int majorno,minorno, nod;

dev_t devid;

//this will be the api that will be exported into the kernel symbol table and can be used by other kernel modules/driver
int provider_module(void);
@


1.8
log
@correct declarations of dev
@
text
@d12 1
d19 1
d23 1
@


1.7
log
@added structs
@
text
@d21 1
a21 1
}DEV;
@


1.6
log
@some correction
@
text
@d12 14
d28 1
d30 1
@


1.5
log
@Changed name of driver
@
text
@d16 1
a16 1
int provider_module();
@


1.4
log
@added exporting function declaration
@
text
@d2 1
a2 1
#define DEVNAME "Char-DD"
@


1.3
log
@added MINOR_NO macro
@
text
@d12 1
d15 2
@


1.2
log
@added minor number, no of devices etc
@
text
@d9 3
@


1.1
log
@Initial revision
@
text
@d9 2
a10 1
int majorno;
@
